{"id":"node_modules/linear-algebra/index.js","dependencies":[{"name":"/Users/SMZ/works/js-game/package.json","includedInParent":true,"mtime":1582824805116},{"name":"/Users/SMZ/works/js-game/node_modules/linear-algebra/package.json","includedInParent":true,"mtime":1582823915534},{"name":"./dist/linear-algebra","loc":{"line":1,"column":21},"parent":"/Users/SMZ/works/js-game/node_modules/linear-algebra/index.js","resolved":"/Users/SMZ/works/js-game/node_modules/linear-algebra/dist/linear-algebra.js"},{"name":"./dist/linear-algebra.precision","loc":{"line":2,"column":22},"parent":"/Users/SMZ/works/js-game/node_modules/linear-algebra/index.js","resolved":"/Users/SMZ/works/js-game/node_modules/linear-algebra/dist/linear-algebra.precision.js"}],"generated":{"js":"var normal = require('./dist/linear-algebra'),\n  precision = require('./dist/linear-algebra.precision');\n\n\n/** \n * Initialise the library.\n * \n * @param {Object} options Additional options.\n * @param {Function} [options.add] Function to add floating point numbers.\n * \n * @return {Object} Linear algebra primitives.\n */\nvar linearAlgebra = module.exports = function(options) {\n  options = options || {};\n  \n  if (options.add) {\n    return linearAlgebra._precision(options);\n  } else {\n    return linearAlgebra._normal(options);\n  }\n};\n\n\n// to make testing easier\nlinearAlgebra._normal = normal;\nlinearAlgebra._precision = precision;\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/linear-algebra/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/linear-algebra/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/linear-algebra/index.js":"var normal = require('./dist/linear-algebra'),\n  precision = require('./dist/linear-algebra.precision');\n\n\n/** \n * Initialise the library.\n * \n * @param {Object} options Additional options.\n * @param {Function} [options.add] Function to add floating point numbers.\n * \n * @return {Object} Linear algebra primitives.\n */\nvar linearAlgebra = module.exports = function(options) {\n  options = options || {};\n  \n  if (options.add) {\n    return linearAlgebra._precision(options);\n  } else {\n    return linearAlgebra._normal(options);\n  }\n};\n\n\n// to make testing easier\nlinearAlgebra._normal = normal;\nlinearAlgebra._precision = precision;\n\n"},"lineCount":28}},"error":null,"hash":"ce4f3c63252c31dd92c16065f8a2b358","cacheData":{"env":{}}}